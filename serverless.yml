service: grilled-cheese-sandwitch

useDotenv: true

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  stage: ${opt:stage, 'dev'}

package:
  individually: true
  patterns:
    - '!./**'

custom:
  data_bucket_name: ${self:service}-${self:provider.stage}-data-bucket
  scripts_bucket_name: ${self:service}-${self:provider.stage}-script-bucket
  logs_bucket_name: ${self:service}-${self:provider.stage}-logs-bucket
  assets:
    auto: true
    targets:
      - bucket: ${self:custom.scripts_bucket_name}
        files:
        - source: scripts
          globs:
            - '**'
  pythonRequirements:
    dockerizePip: non-linux
    layer: true
    slim: true

functions:
  hello:
    handler: lambda.handler.lambda_handler
    package:
      include:
        - ./lambda/handler.py
    layers:
      - Ref: PythonRequirementsLambdaLayer
    environment:
      BUCKET_NAME: ${self:custom.data_bucket_name}
      RAPIDAPI_KEY: ${env:RAPIDAPI_KEY}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - s3:ListBucket
        Resource: arn:aws:s3:::${self:custom.data_bucket_name}
      - Effect: Allow
        Action:
          - s3:PutObject
        Resource: arn:aws:s3:::${self:custom.data_bucket_name}/*

resources:
  Resources:

    DataBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.data_bucket_name}
        VersioningConfiguration:
          Status: Enabled

    LogsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.logs_bucket_name}
        VersioningConfiguration:
          Status: Enabled

    ETLBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.scripts_bucket_name}
        VersioningConfiguration:
          Status: Enabled

    GlueCrawlerRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - glue.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: root
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - 'glue:*'
                  Resource: '*'

    GlueCrawler:
      Type: AWS::Glue::Crawler
      Properties:
        DatabaseName: MyGlueDatabase
        Role: !GetAtt GlueCrawlerRole.Arn
        Targets:
          S3Targets:
            - Path: s3://${self:custom.data_bucket_name}
        SchemaChangePolicy:
          UpdateBehavior: 'UPDATE_IN_DATABASE'
          DeleteBehavior: 'DEPRECATE_IN_DATABASE'

    GlueJob:
      Type: AWS::Glue::Job
      Properties:
        Command: 
          Name: 'glueetl'
          ScriptLocation: s3://${self:custom.scripts_bucket_name}/etl.py
        Role: !GetAtt GlueCrawlerRole.Arn
        DefaultArguments:
          '--TempDir': s3://${self:custom.scripts_bucket_name}/temp
          '--enable-metrics': ''
          '--job-bookmark-option': 'job-bookmark-enable'
          '--job-language': 'python'
          '--enable-continuous-cloudwatch-log': 'true'


plugins:
  - serverless-python-requirements
  - serverless-iam-roles-per-function
  - serverless-dotenv-plugin
  - serverless-s3-deploy
  - ./emptyBucketPlugin
